{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adhi\\\\Downloads\\\\01-starting-project (3)\\\\01-starting-project\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from \"./cart-context\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 11\n  }, this);\n};\n\n_s(CartProvider, \"2SyrzIf5h4zAVB5yWzJ1q/dSUlI=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/Adhi/Downloads/01-starting-project (3)/01-starting-project/src/store/CartProvider.js"],"names":["CartContext","useReducer","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedItems","concat","item","updatedTotalAmount","price","amount","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemHandler","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AACA,SAAQC,UAAR,QAAyB,OAAzB;;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAC,EADe;AAErBC,EAAAA,WAAW,EAAC;AAFS,CAAzB;;AAOA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAgB;AAEhC,MAAGA,MAAM,CAACC,IAAP,KAAgB,KAAnB,EAAyB;AACrB,UAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAArB;AACA,UAAMC,kBAAkB,GAAGN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAoBN,MAAM,CAACI,IAAP,CAAYG,MAA/E;AACH;;AACD,SAAOZ,gBAAP;AACH,CAPD;;AASA,MAAMa,YAAY,GAAIC,KAAD,IAAS;AAAA;;AAC7B,QAAM,CAACC,SAAD,EAAWC,kBAAX,IAAiCjB,UAAU,CAACI,WAAD,EAAaH,gBAAb,CAAjD;;AAGG,QAAMiB,oBAAoB,GAAGR,IAAI,IAAE;AAChCO,IAAAA,kBAAkB,CAAC;AAACV,MAAAA,IAAI,EAAC,KAAN;AAAYG,MAAAA,IAAI,EAACA;AAAjB,KAAD,CAAlB;AACF,GAFD;;AAGA,QAAMS,iBAAiB,GAAGC,EAAE,IAAE;AAC3BH,IAAAA,kBAAkB,CAAC;AAACV,MAAAA,IAAI,EAAC,QAAN;AAAea,MAAAA,EAAE,EAACA;AAAlB,KAAD,CAAlB;AACF,GAFD;;AAGA,QAAMC,WAAW,GAAC;AACdnB,IAAAA,KAAK,EAACc,SAAS,CAACd,KADF;AAEdC,IAAAA,WAAW,EAACa,SAAS,CAACb,WAFR;AAGdmB,IAAAA,OAAO,EAACJ,oBAHM;AAIdK,IAAAA,UAAU,EAACJ;AAJG,GAAlB;AAMA,sBAAM,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACDN,KAAK,CAACS;AADL;AAAA;AAAA;AAAA;AAAA,UAAN;AAGH,CAnBD;;GAAMV,Y;;KAAAA,Y;AAoBN,eAAeA,YAAf","sourcesContent":["import CartContext from \"./cart-context\";\r\nimport {useReducer} from \"react\";\r\n\r\nconst defaultCartState = {\r\n    items:[],\r\n    totalAmount:0\r\n}\r\n\r\n\r\n\r\nconst cartReducer = (state,action)=>{\r\n\r\n    if(action.type === 'ADD'){\r\n        const updatedItems = state.items.concat(action.item);\r\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n    }\r\n    return defaultCartState;\r\n}\r\n\r\nconst CartProvider = (props)=>{\r\n const [cartState,dispatchCartAction] = useReducer(cartReducer,defaultCartState);\r\n\r\n\r\n    const addItemToCartHandler = item=>{\r\n       dispatchCartAction({type:'ADD',item:item})\r\n    }\r\n    const removeItemHandler = id=>{\r\n       dispatchCartAction({type:'REMOVE',id:id})\r\n    }\r\n    const cartContext={\r\n        items:cartState.items,\r\n        totalAmount:cartState.totalAmount,\r\n        addItem:addItemToCartHandler,\r\n        removeItem:removeItemHandler\r\n    }\r\n    return<CartContext.Provider value={cartContext}>\r\n        {props.children}\r\n    </CartContext.Provider>\r\n}\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}