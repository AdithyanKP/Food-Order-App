{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adhi\\\\OneDrive\\\\Desktop\\\\Food-OrderAppReact\\\\Food-OrderApp\\\\src\\\\Components\\\\Cart\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport classes from \"./Cart.module.css\";\nimport Modal from \"../UI/Modal\";\nimport CartContext from \"../../store/cart-context\";\nimport CartItem from \"./CartItem\";\nimport Checkout from \"./Checkout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const [isCheckout, setIsCheckout] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [didSubmitting, setIsDidSubmitting] = useState(false);\n  const cartCtx = useContext(CartContext);\n  const totalAmount = `$ ${cartCtx.totalAmount.toFixed(2)}`;\n  const hashItems = cartCtx.items.length > 0;\n\n  const cartItemsRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemsAddHandler = item => {\n    cartCtx.addItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const CartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes[\"cart-items\"],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemsRemoveHandler.bind(null, item.id),\n      onAdd: cartItemsAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n\n  const onClickHandler = event => {\n    setIsCheckout(true);\n  };\n\n  const submitOrderHandler = async userData => {\n    setIsSubmitting(true);\n    await fetch(\"https://react-http-b4f09-default-rtdb.firebaseio.com/orders.json\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        user: userData,\n        orderedItems: cartCtx.items\n      })\n    });\n    setIsSubmitting(false);\n    setIsDidSubmitting(true);\n    cartCtx.clearCart();\n  };\n\n  const modelActions = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.onHideCart,\n      className: classes[\"button--alt\"],\n      children: \"close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), hashItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.button,\n      onClick: onClickHandler,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n\n  const cartModelContent = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [CartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), isCheckout && /*#__PURE__*/_jsxDEV(Checkout, {\n      onConfirm: submitOrderHandler,\n      onCancel: props.onHideCart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), !isCheckout && modelActions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n\n  const isSubmittingModelContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"senting your order data ..\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 36\n  }, this);\n\n  const didSubmitContent = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Succesfully sent the Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: props.onHideCart,\n        className: classes.button,\n        children: \"close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onHideCart,\n    children: [!isSubmitting && !didSubmitting && cartModelContent, isSubmitting && !didSubmitting && isSubmittingModelContent, !isSubmitting && didSubmitting && didSubmitContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"ZM5GZTjmvrWS0CeqAC6Xk8DuKW8=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["C:/Users/Adhi/OneDrive/Desktop/Food-OrderAppReact/Food-OrderApp/src/Components/Cart/Cart.js"],"names":["React","useContext","useState","classes","Modal","CartContext","CartItem","Checkout","Cart","props","isCheckout","setIsCheckout","isSubmitting","setIsSubmitting","didSubmitting","setIsDidSubmitting","cartCtx","totalAmount","toFixed","hashItems","items","length","cartItemsRemoveHandler","id","removeItem","cartItemsAddHandler","item","addItem","amount","CartItems","map","name","price","bind","onClickHandler","event","submitOrderHandler","userData","fetch","method","body","JSON","stringify","user","orderedItems","clearCart","modelActions","actions","onHideCart","button","cartModelContent","total","isSubmittingModelContent","didSubmitContent"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport classes from \"./Cart.module.css\";\r\nimport Modal from \"../UI/Modal\";\r\nimport CartContext from \"../../store/cart-context\";\r\nimport CartItem from \"./CartItem\";\r\nimport Checkout from \"./Checkout\";\r\nconst Cart = (props) => {\r\n  const [isCheckout, setIsCheckout] = useState(false);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [didSubmitting, setIsDidSubmitting] = useState(false);\r\n  const cartCtx = useContext(CartContext);\r\n  const totalAmount = `$ ${cartCtx.totalAmount.toFixed(2)}`;\r\n  const hashItems = cartCtx.items.length > 0;\r\n\r\n  const cartItemsRemoveHandler = (id) => {\r\n    cartCtx.removeItem(id);\r\n  };\r\n  const cartItemsAddHandler = (item) => {\r\n    cartCtx.addItem({ ...item, amount: 1 });\r\n  };\r\n  const CartItems = (\r\n    <ul className={classes[\"cart-items\"]}>\r\n      {cartCtx.items.map((item) => (\r\n        <CartItem\r\n          key={item.id}\r\n          name={item.name}\r\n          amount={item.amount}\r\n          price={item.price}\r\n          onRemove={cartItemsRemoveHandler.bind(null, item.id)}\r\n          onAdd={cartItemsAddHandler.bind(null, item)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n  const onClickHandler = (event) => {\r\n    setIsCheckout(true);\r\n  };\r\n  const submitOrderHandler = async (userData) => {\r\n    setIsSubmitting(true);\r\n    await fetch(\r\n      \"https://react-http-b4f09-default-rtdb.firebaseio.com/orders.json\",\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          user: userData,\r\n          orderedItems: cartCtx.items,\r\n        }),\r\n      }\r\n    );\r\n\r\n    setIsSubmitting(false);\r\n    setIsDidSubmitting(true);\r\n    cartCtx.clearCart();\r\n  };\r\n  const modelActions = (\r\n    <div className={classes.actions}>\r\n      <button onClick={props.onHideCart} className={classes[\"button--alt\"]}>\r\n        close\r\n      </button>\r\n      {hashItems && (\r\n        <button className={classes.button} onClick={onClickHandler}>\r\n          Order\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const cartModelContent = (\r\n    <React.Fragment>\r\n      {CartItems}\r\n      <div className={classes.total}>\r\n        <span>Total Amount</span>\r\n        <span>{totalAmount}</span>\r\n      </div>\r\n      {isCheckout && (\r\n        <Checkout onConfirm={submitOrderHandler} onCancel={props.onHideCart} />\r\n      )}\r\n      {!isCheckout && modelActions}\r\n    </React.Fragment>\r\n  );\r\n  const isSubmittingModelContent = <p>senting your order data ..</p>;\r\n  const didSubmitContent = (\r\n    <React.Fragment>\r\n      <p>Succesfully sent the Order</p>{\" \"}\r\n      <div className={classes.actions}>\r\n        <button onClick={props.onHideCart} className={classes.button}>\r\n          close\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n  return (\r\n    <Modal onClose={props.onHideCart}>\r\n      {!isSubmitting && !didSubmitting && cartModelContent}\r\n      {isSubmitting && !didSubmitting && isSubmittingModelContent}\r\n      {!isSubmitting && didSubmitting && didSubmitContent}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n"]},"metadata":{},"sourceType":"module"}