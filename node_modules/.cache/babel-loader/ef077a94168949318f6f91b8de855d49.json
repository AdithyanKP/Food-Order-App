{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adhi\\\\OneDrive\\\\Desktop\\\\Food-OrderAppReact\\\\Food-OrderApp\\\\src\\\\Components\\\\Meals\\\\AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Card from '../UI/Card';\nimport classses from \"./AvailableMeals.module.css\";\nimport MealItem from './MealItem/MealItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsloading] = useState(true);\n  const [httpError, setHttpError] = useState(false);\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch('https://react-http-b4f09-default-rtdb.firebaseio.com/meals.json');\n\n      if (!response) {\n        throw new Error('something went wrong');\n      }\n\n      const responseData = await response.json();\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n      setIsloading(false);\n    };\n\n    fetchMeals().catch(error => {\n      setIsloading(false);\n      setHttpError(error);\n    });\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classses.mealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading......\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classses.mealsError,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"no Data found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classses.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"Ut9N9/qJ3kZ80pWiQA99VwMnJPE=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["C:/Users/Adhi/OneDrive/Desktop/Food-OrderAppReact/Food-OrderApp/src/Components/Meals/AvailableMeals.js"],"names":["useEffect","useState","Card","classses","MealItem","AvailableMeals","meals","setMeals","isLoading","setIsloading","httpError","setHttpError","fetchMeals","response","fetch","Error","responseData","json","loadedMeals","key","push","id","name","description","price","catch","error","mealsLoading","mealsError","mealsList","map","meal"],"mappings":";;;AACE,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEF,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;;AAGA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAK,CAACO,SAAD,EAAWC,YAAX,IAA2BR,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAK,CAACS,SAAD,EAAWC,YAAX,IAA2BV,QAAQ,CAAC,KAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,UAAU,GAAG,YAAY;AAC7B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iEAAD,CAA5B;;AACA,UAAG,CAACD,QAAJ,EAAa;AACX,cAAM,IAAIE,KAAJ,CAAW,sBAAX,CAAN;AACD;;AACD,YAAMC,YAAY,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAA3B;AAEA,YAAMC,WAAW,GAAG,EAApB;;AAEA,WAAK,MAAMC,GAAX,IAAkBH,YAAlB,EAAgC;AAC9BE,QAAAA,WAAW,CAACE,IAAZ,CAAiB;AACfC,UAAAA,EAAE,EAAEF,GADW;AAEfG,UAAAA,IAAI,EAAEN,YAAY,CAACG,GAAD,CAAZ,CAAkBG,IAFT;AAGfC,UAAAA,WAAW,EAAEP,YAAY,CAACG,GAAD,CAAZ,CAAkBI,WAHhB;AAIfC,UAAAA,KAAK,EAAER,YAAY,CAACG,GAAD,CAAZ,CAAkBK;AAJV,SAAjB;AAMD;;AAEDjB,MAAAA,QAAQ,CAACW,WAAD,CAAR;AACAT,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KApBD;;AAsBFG,IAAAA,UAAU,GAAGa,KAAb,CAAoBC,KAAD,IAAS;AAC1BjB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,YAAY,CAACe,KAAD,CAAZ;AACD,KAHD;AAKC,GA5BQ,EA4BN,EA5BM,CAAT;;AA8BA,MAAGlB,SAAH,EAAa;AACX,wBAAO;AAAS,MAAA,SAAS,EAAEL,QAAQ,CAACwB,YAA7B;AAAA,6BACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;AAAA;AAAA,YAAP;AAGD;;AACD,MAAGjB,SAAH,EAAa;AACX,wBAAO;AAAS,MAAA,SAAS,EAAEP,QAAQ,CAACyB,UAA7B;AAAA,6BACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;AAAA;AAAA,YAAP;AAGD;;AAED,QAAMC,SAAS,GAAGvB,KAAK,CAACwB,GAAN,CAAWC,IAAD,iBAC1B,QAAC,QAAD;AAEE,IAAA,EAAE,EAAEA,IAAI,CAACV,EAFX;AAGE,IAAA,IAAI,EAAEU,IAAI,CAACT,IAHb;AAIE,IAAA,WAAW,EAAES,IAAI,CAACR,WAJpB;AAKE,IAAA,KAAK,EAAEQ,IAAI,CAACP;AALd,KACOO,IAAI,CAACV,EADZ;AAAA;AAAA;AAAA;AAAA,UADgB,CAAlB;AASA,sBACE;AAAS,IAAA,SAAS,EAAElB,QAAQ,CAACG,KAA7B;AAAA,2BACE,QAAC,IAAD;AAAA,6BACE;AAAA,kBAAKuB;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA9DD;;GAAMxB,c;;KAAAA,c;AA+DN,eAAeA,cAAf","sourcesContent":["\r\n  import { useEffect, useState } from 'react';\r\n\r\nimport Card from '../UI/Card';\r\nimport classses from \"./AvailableMeals.module.css\";\r\nimport MealItem from './MealItem/MealItem';\r\n\r\n\r\nconst AvailableMeals = () => {\r\n  const [meals, setMeals] = useState([]);\r\n  const[isLoading,setIsloading] = useState(true);\r\n  const[httpError,setHttpError] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const fetchMeals = async () => {\r\n      const response = await fetch('https://react-http-b4f09-default-rtdb.firebaseio.com/meals.json');\r\n      if(!response){\r\n        throw new Error ('something went wrong');\r\n      }\r\n      const responseData = await response.json();\r\n\r\n      const loadedMeals = [];\r\n\r\n      for (const key in responseData) {\r\n        loadedMeals.push({\r\n          id: key,\r\n          name: responseData[key].name,\r\n          description: responseData[key].description,\r\n          price: responseData[key].price,\r\n        });\r\n      }\r\n\r\n      setMeals(loadedMeals);\r\n      setIsloading(false);\r\n    };\r\n \r\n  fetchMeals().catch((error)=>{\r\n    setIsloading(false);\r\n    setHttpError(error);\r\n  })\r\n \r\n  }, []);\r\n\r\n  if(isLoading){\r\n    return(<section className={classses.mealsLoading}>\r\n      <p>Loading......</p> \r\n      </section>)\r\n  }\r\n  if(httpError){\r\n    return(<section className={classses.mealsError}>\r\n      <p>no Data found</p> \r\n      </section>)\r\n  }\r\n  \r\n  const mealsList = meals.map((meal) => (\r\n    <MealItem\r\n      key={meal.id}\r\n      id={meal.id}\r\n      name={meal.name}\r\n      description={meal.description}\r\n      price={meal.price}\r\n    />\r\n  ));\r\n  return (\r\n    <section className={classses.meals}>\r\n      <Card>\r\n        <ul>{mealsList}</ul>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\nexport default AvailableMeals;\r\n"]},"metadata":{},"sourceType":"module"}